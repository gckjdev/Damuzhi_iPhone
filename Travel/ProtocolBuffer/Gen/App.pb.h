// Generated by the protocol buffer compiler.  DO NOT EDIT!

#import "ProtocolBuffers.h"

@class App;
@class App_Builder;
@class City;
@class CityList;
@class CityList_Builder;
@class City_Builder;

@interface AppRoot : NSObject {
}
+ (PBExtensionRegistry*) extensionRegistry;
+ (void) registerAllExtensions:(PBMutableExtensionRegistry*) registry;
@end

@interface City : PBGeneratedMessage {
@private
  BOOL hasCityId_:1;
  BOOL hasCityName_:1;
  NSString* cityId;
  NSString* cityName;
}
- (BOOL) hasCityId;
- (BOOL) hasCityName;
@property (readonly, retain) NSString* cityId;
@property (readonly, retain) NSString* cityName;

+ (City*) defaultInstance;
- (City*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (City_Builder*) builder;
+ (City_Builder*) builder;
+ (City_Builder*) builderWithPrototype:(City*) prototype;

+ (City*) parseFromData:(NSData*) data;
+ (City*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (City*) parseFromInputStream:(NSInputStream*) input;
+ (City*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (City*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (City*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface City_Builder : PBGeneratedMessage_Builder {
@private
  City* result;
}

- (City*) defaultInstance;

- (City_Builder*) clear;
- (City_Builder*) clone;

- (City*) build;
- (City*) buildPartial;

- (City_Builder*) mergeFrom:(City*) other;
- (City_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (City_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasCityId;
- (NSString*) cityId;
- (City_Builder*) setCityId:(NSString*) value;
- (City_Builder*) clearCityId;

- (BOOL) hasCityName;
- (NSString*) cityName;
- (City_Builder*) setCityName:(NSString*) value;
- (City_Builder*) clearCityName;
@end

@interface CityList : PBGeneratedMessage {
@private
  NSMutableArray* mutableCityListList;
}
- (NSArray*) cityListList;
- (City*) cityListAtIndex:(int32_t) index;

+ (CityList*) defaultInstance;
- (CityList*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (CityList_Builder*) builder;
+ (CityList_Builder*) builder;
+ (CityList_Builder*) builderWithPrototype:(CityList*) prototype;

+ (CityList*) parseFromData:(NSData*) data;
+ (CityList*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CityList*) parseFromInputStream:(NSInputStream*) input;
+ (CityList*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CityList*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (CityList*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CityList_Builder : PBGeneratedMessage_Builder {
@private
  CityList* result;
}

- (CityList*) defaultInstance;

- (CityList_Builder*) clear;
- (CityList_Builder*) clone;

- (CityList*) build;
- (CityList*) buildPartial;

- (CityList_Builder*) mergeFrom:(CityList*) other;
- (CityList_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (CityList_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (NSArray*) cityListList;
- (City*) cityListAtIndex:(int32_t) index;
- (CityList_Builder*) replaceCityListAtIndex:(int32_t) index with:(City*) value;
- (CityList_Builder*) addCityList:(City*) value;
- (CityList_Builder*) addAllCityList:(NSArray*) values;
- (CityList_Builder*) clearCityListList;
@end

@interface App : PBGeneratedMessage {
@private
  BOOL hasHelpHtml_:1;
  NSString* helpHtml;
  NSMutableArray* mutableCityListList;
  NSMutableArray* mutableTestCityListList;
}
- (BOOL) hasHelpHtml;
@property (readonly, retain) NSString* helpHtml;
- (NSArray*) cityListList;
- (City*) cityListAtIndex:(int32_t) index;
- (NSArray*) testCityListList;
- (City*) testCityListAtIndex:(int32_t) index;

+ (App*) defaultInstance;
- (App*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (App_Builder*) builder;
+ (App_Builder*) builder;
+ (App_Builder*) builderWithPrototype:(App*) prototype;

+ (App*) parseFromData:(NSData*) data;
+ (App*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (App*) parseFromInputStream:(NSInputStream*) input;
+ (App*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (App*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (App*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface App_Builder : PBGeneratedMessage_Builder {
@private
  App* result;
}

- (App*) defaultInstance;

- (App_Builder*) clear;
- (App_Builder*) clone;

- (App*) build;
- (App*) buildPartial;

- (App_Builder*) mergeFrom:(App*) other;
- (App_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (App_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (NSArray*) cityListList;
- (City*) cityListAtIndex:(int32_t) index;
- (App_Builder*) replaceCityListAtIndex:(int32_t) index with:(City*) value;
- (App_Builder*) addCityList:(City*) value;
- (App_Builder*) addAllCityList:(NSArray*) values;
- (App_Builder*) clearCityListList;

- (NSArray*) testCityListList;
- (City*) testCityListAtIndex:(int32_t) index;
- (App_Builder*) replaceTestCityListAtIndex:(int32_t) index with:(City*) value;
- (App_Builder*) addTestCityList:(City*) value;
- (App_Builder*) addAllTestCityList:(NSArray*) values;
- (App_Builder*) clearTestCityListList;

- (BOOL) hasHelpHtml;
- (NSString*) helpHtml;
- (App_Builder*) setHelpHtml:(NSString*) value;
- (App_Builder*) clearHelpHtml;
@end

