// Generated by the protocol buffer compiler.  DO NOT EDIT!

#import "Place.pb.h"

@implementation PlaceRoot
static PBExtensionRegistry* extensionRegistry = nil;
+ (PBExtensionRegistry*) extensionRegistry {
  return extensionRegistry;
}

+ (void) initialize {
  if (self == [PlaceRoot class]) {
    PBMutableExtensionRegistry* registry = [PBMutableExtensionRegistry registry];
    [self registerAllExtensions:registry];
    extensionRegistry = [registry retain];
  }
}
+ (void) registerAllExtensions:(PBMutableExtensionRegistry*) registry {
}
@end

@interface HotelRoom ()
@property int32_t roomId;
@property (retain) NSString* name;
@property (retain) NSString* breakfast;
@property (retain) NSString* price;
@end

@implementation HotelRoom

- (BOOL) hasRoomId {
  return !!hasRoomId_;
}
- (void) setHasRoomId:(BOOL) value {
  hasRoomId_ = !!value;
}
@synthesize roomId;
- (BOOL) hasName {
  return !!hasName_;
}
- (void) setHasName:(BOOL) value {
  hasName_ = !!value;
}
@synthesize name;
- (BOOL) hasBreakfast {
  return !!hasBreakfast_;
}
- (void) setHasBreakfast:(BOOL) value {
  hasBreakfast_ = !!value;
}
@synthesize breakfast;
- (BOOL) hasPrice {
  return !!hasPrice_;
}
- (void) setHasPrice:(BOOL) value {
  hasPrice_ = !!value;
}
@synthesize price;
- (void) dealloc {
  self.name = nil;
  self.breakfast = nil;
  self.price = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.roomId = 0;
    self.name = @"";
    self.breakfast = @"";
    self.price = @"";
  }
  return self;
}
static HotelRoom* defaultHotelRoomInstance = nil;
+ (void) initialize {
  if (self == [HotelRoom class]) {
    defaultHotelRoomInstance = [[HotelRoom alloc] init];
  }
}
+ (HotelRoom*) defaultInstance {
  return defaultHotelRoomInstance;
}
- (HotelRoom*) defaultInstance {
  return defaultHotelRoomInstance;
}
- (BOOL) isInitialized {
  if (!self.hasRoomId) {
    return NO;
  }
  if (!self.hasName) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasRoomId) {
    [output writeInt32:1 value:self.roomId];
  }
  if (self.hasName) {
    [output writeString:2 value:self.name];
  }
  if (self.hasBreakfast) {
    [output writeString:3 value:self.breakfast];
  }
  if (self.hasPrice) {
    [output writeString:4 value:self.price];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasRoomId) {
    size += computeInt32Size(1, self.roomId);
  }
  if (self.hasName) {
    size += computeStringSize(2, self.name);
  }
  if (self.hasBreakfast) {
    size += computeStringSize(3, self.breakfast);
  }
  if (self.hasPrice) {
    size += computeStringSize(4, self.price);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (HotelRoom*) parseFromData:(NSData*) data {
  return (HotelRoom*)[[[HotelRoom builder] mergeFromData:data] build];
}
+ (HotelRoom*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (HotelRoom*)[[[HotelRoom builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (HotelRoom*) parseFromInputStream:(NSInputStream*) input {
  return (HotelRoom*)[[[HotelRoom builder] mergeFromInputStream:input] build];
}
+ (HotelRoom*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (HotelRoom*)[[[HotelRoom builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (HotelRoom*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (HotelRoom*)[[[HotelRoom builder] mergeFromCodedInputStream:input] build];
}
+ (HotelRoom*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (HotelRoom*)[[[HotelRoom builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (HotelRoom_Builder*) builder {
  return [[[HotelRoom_Builder alloc] init] autorelease];
}
+ (HotelRoom_Builder*) builderWithPrototype:(HotelRoom*) prototype {
  return [[HotelRoom builder] mergeFrom:prototype];
}
- (HotelRoom_Builder*) builder {
  return [HotelRoom builder];
}
@end

@interface HotelRoom_Builder()
@property (retain) HotelRoom* result;
@end

@implementation HotelRoom_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[HotelRoom alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (HotelRoom_Builder*) clear {
  self.result = [[[HotelRoom alloc] init] autorelease];
  return self;
}
- (HotelRoom_Builder*) clone {
  return [HotelRoom builderWithPrototype:result];
}
- (HotelRoom*) defaultInstance {
  return [HotelRoom defaultInstance];
}
- (HotelRoom*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (HotelRoom*) buildPartial {
  HotelRoom* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (HotelRoom_Builder*) mergeFrom:(HotelRoom*) other {
  if (other == [HotelRoom defaultInstance]) {
    return self;
  }
  if (other.hasRoomId) {
    [self setRoomId:other.roomId];
  }
  if (other.hasName) {
    [self setName:other.name];
  }
  if (other.hasBreakfast) {
    [self setBreakfast:other.breakfast];
  }
  if (other.hasPrice) {
    [self setPrice:other.price];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (HotelRoom_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (HotelRoom_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setRoomId:[input readInt32]];
        break;
      }
      case 18: {
        [self setName:[input readString]];
        break;
      }
      case 26: {
        [self setBreakfast:[input readString]];
        break;
      }
      case 34: {
        [self setPrice:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasRoomId {
  return result.hasRoomId;
}
- (int32_t) roomId {
  return result.roomId;
}
- (HotelRoom_Builder*) setRoomId:(int32_t) value {
  result.hasRoomId = YES;
  result.roomId = value;
  return self;
}
- (HotelRoom_Builder*) clearRoomId {
  result.hasRoomId = NO;
  result.roomId = 0;
  return self;
}
- (BOOL) hasName {
  return result.hasName;
}
- (NSString*) name {
  return result.name;
}
- (HotelRoom_Builder*) setName:(NSString*) value {
  result.hasName = YES;
  result.name = value;
  return self;
}
- (HotelRoom_Builder*) clearName {
  result.hasName = NO;
  result.name = @"";
  return self;
}
- (BOOL) hasBreakfast {
  return result.hasBreakfast;
}
- (NSString*) breakfast {
  return result.breakfast;
}
- (HotelRoom_Builder*) setBreakfast:(NSString*) value {
  result.hasBreakfast = YES;
  result.breakfast = value;
  return self;
}
- (HotelRoom_Builder*) clearBreakfast {
  result.hasBreakfast = NO;
  result.breakfast = @"";
  return self;
}
- (BOOL) hasPrice {
  return result.hasPrice;
}
- (NSString*) price {
  return result.price;
}
- (HotelRoom_Builder*) setPrice:(NSString*) value {
  result.hasPrice = YES;
  result.price = value;
  return self;
}
- (HotelRoom_Builder*) clearPrice {
  result.hasPrice = NO;
  result.price = @"";
  return self;
}
@end

@interface Place ()
@property int32_t placeId;
@property int32_t cityId;
@property int32_t categoryId;
@property int32_t subCategoryId;
@property (retain) NSString* name;
@property int32_t rank;
@property (retain) NSMutableArray* mutableProvidedServiceIdList;
@property Float64 longitude;
@property Float64 latitude;
@property int32_t areaId;
@property (retain) NSString* price;
@property (retain) NSString* avgPrice;
@property int32_t priceRank;
@property (retain) NSString* icon;
@property (retain) NSMutableArray* mutableImagesList;
@property (retain) NSString* introduction;
@property (retain) NSString* transportation;
@property (retain) NSMutableArray* mutableTelephoneList;
@property (retain) NSMutableArray* mutableAddressList;
@property (retain) NSString* website;
@property (retain) NSString* priceDescription;
@property (retain) NSString* openTime;
@property (retain) NSString* tips;
@property (retain) NSMutableArray* mutableKeywordsList;
@property (retain) NSMutableArray* mutableTypicalDishesList;
@property int32_t hotelStar;
@property (retain) NSString* parkingGuide;
@property int32_t placeFavoriteCount;
@property int32_t hasDiscount;
@property (retain) NSMutableArray* mutableRoomsList;
@end

@implementation Place

- (BOOL) hasPlaceId {
  return !!hasPlaceId_;
}
- (void) setHasPlaceId:(BOOL) value {
  hasPlaceId_ = !!value;
}
@synthesize placeId;
- (BOOL) hasCityId {
  return !!hasCityId_;
}
- (void) setHasCityId:(BOOL) value {
  hasCityId_ = !!value;
}
@synthesize cityId;
- (BOOL) hasCategoryId {
  return !!hasCategoryId_;
}
- (void) setHasCategoryId:(BOOL) value {
  hasCategoryId_ = !!value;
}
@synthesize categoryId;
- (BOOL) hasSubCategoryId {
  return !!hasSubCategoryId_;
}
- (void) setHasSubCategoryId:(BOOL) value {
  hasSubCategoryId_ = !!value;
}
@synthesize subCategoryId;
- (BOOL) hasName {
  return !!hasName_;
}
- (void) setHasName:(BOOL) value {
  hasName_ = !!value;
}
@synthesize name;
- (BOOL) hasRank {
  return !!hasRank_;
}
- (void) setHasRank:(BOOL) value {
  hasRank_ = !!value;
}
@synthesize rank;
@synthesize mutableProvidedServiceIdList;
- (BOOL) hasLongitude {
  return !!hasLongitude_;
}
- (void) setHasLongitude:(BOOL) value {
  hasLongitude_ = !!value;
}
@synthesize longitude;
- (BOOL) hasLatitude {
  return !!hasLatitude_;
}
- (void) setHasLatitude:(BOOL) value {
  hasLatitude_ = !!value;
}
@synthesize latitude;
- (BOOL) hasAreaId {
  return !!hasAreaId_;
}
- (void) setHasAreaId:(BOOL) value {
  hasAreaId_ = !!value;
}
@synthesize areaId;
- (BOOL) hasPrice {
  return !!hasPrice_;
}
- (void) setHasPrice:(BOOL) value {
  hasPrice_ = !!value;
}
@synthesize price;
- (BOOL) hasAvgPrice {
  return !!hasAvgPrice_;
}
- (void) setHasAvgPrice:(BOOL) value {
  hasAvgPrice_ = !!value;
}
@synthesize avgPrice;
- (BOOL) hasPriceRank {
  return !!hasPriceRank_;
}
- (void) setHasPriceRank:(BOOL) value {
  hasPriceRank_ = !!value;
}
@synthesize priceRank;
- (BOOL) hasIcon {
  return !!hasIcon_;
}
- (void) setHasIcon:(BOOL) value {
  hasIcon_ = !!value;
}
@synthesize icon;
@synthesize mutableImagesList;
- (BOOL) hasIntroduction {
  return !!hasIntroduction_;
}
- (void) setHasIntroduction:(BOOL) value {
  hasIntroduction_ = !!value;
}
@synthesize introduction;
- (BOOL) hasTransportation {
  return !!hasTransportation_;
}
- (void) setHasTransportation:(BOOL) value {
  hasTransportation_ = !!value;
}
@synthesize transportation;
@synthesize mutableTelephoneList;
@synthesize mutableAddressList;
- (BOOL) hasWebsite {
  return !!hasWebsite_;
}
- (void) setHasWebsite:(BOOL) value {
  hasWebsite_ = !!value;
}
@synthesize website;
- (BOOL) hasPriceDescription {
  return !!hasPriceDescription_;
}
- (void) setHasPriceDescription:(BOOL) value {
  hasPriceDescription_ = !!value;
}
@synthesize priceDescription;
- (BOOL) hasOpenTime {
  return !!hasOpenTime_;
}
- (void) setHasOpenTime:(BOOL) value {
  hasOpenTime_ = !!value;
}
@synthesize openTime;
- (BOOL) hasTips {
  return !!hasTips_;
}
- (void) setHasTips:(BOOL) value {
  hasTips_ = !!value;
}
@synthesize tips;
@synthesize mutableKeywordsList;
@synthesize mutableTypicalDishesList;
- (BOOL) hasHotelStar {
  return !!hasHotelStar_;
}
- (void) setHasHotelStar:(BOOL) value {
  hasHotelStar_ = !!value;
}
@synthesize hotelStar;
- (BOOL) hasParkingGuide {
  return !!hasParkingGuide_;
}
- (void) setHasParkingGuide:(BOOL) value {
  hasParkingGuide_ = !!value;
}
@synthesize parkingGuide;
- (BOOL) hasPlaceFavoriteCount {
  return !!hasPlaceFavoriteCount_;
}
- (void) setHasPlaceFavoriteCount:(BOOL) value {
  hasPlaceFavoriteCount_ = !!value;
}
@synthesize placeFavoriteCount;
- (BOOL) hasHasDiscount {
  return !!hasHasDiscount_;
}
- (void) setHasHasDiscount:(BOOL) value {
  hasHasDiscount_ = !!value;
}
@synthesize hasDiscount;
@synthesize mutableRoomsList;
- (void) dealloc {
  self.name = nil;
  self.mutableProvidedServiceIdList = nil;
  self.price = nil;
  self.avgPrice = nil;
  self.icon = nil;
  self.mutableImagesList = nil;
  self.introduction = nil;
  self.transportation = nil;
  self.mutableTelephoneList = nil;
  self.mutableAddressList = nil;
  self.website = nil;
  self.priceDescription = nil;
  self.openTime = nil;
  self.tips = nil;
  self.mutableKeywordsList = nil;
  self.mutableTypicalDishesList = nil;
  self.parkingGuide = nil;
  self.mutableRoomsList = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.placeId = 0;
    self.cityId = 0;
    self.categoryId = 0;
    self.subCategoryId = 0;
    self.name = @"";
    self.rank = 0;
    self.longitude = 0;
    self.latitude = 0;
    self.areaId = 0;
    self.price = @"";
    self.avgPrice = @"";
    self.priceRank = 0;
    self.icon = @"";
    self.introduction = @"";
    self.transportation = @"";
    self.website = @"";
    self.priceDescription = @"";
    self.openTime = @"";
    self.tips = @"";
    self.hotelStar = 0;
    self.parkingGuide = @"";
    self.placeFavoriteCount = 0;
    self.hasDiscount = 0;
  }
  return self;
}
static Place* defaultPlaceInstance = nil;
+ (void) initialize {
  if (self == [Place class]) {
    defaultPlaceInstance = [[Place alloc] init];
  }
}
+ (Place*) defaultInstance {
  return defaultPlaceInstance;
}
- (Place*) defaultInstance {
  return defaultPlaceInstance;
}
- (NSArray*) providedServiceIdList {
  return mutableProvidedServiceIdList;
}
- (int32_t) providedServiceIdAtIndex:(int32_t) index {
  id value = [mutableProvidedServiceIdList objectAtIndex:index];
  return [value intValue];
}
- (NSArray*) imagesList {
  return mutableImagesList;
}
- (NSString*) imagesAtIndex:(int32_t) index {
  id value = [mutableImagesList objectAtIndex:index];
  return value;
}
- (NSArray*) telephoneList {
  return mutableTelephoneList;
}
- (NSString*) telephoneAtIndex:(int32_t) index {
  id value = [mutableTelephoneList objectAtIndex:index];
  return value;
}
- (NSArray*) addressList {
  return mutableAddressList;
}
- (NSString*) addressAtIndex:(int32_t) index {
  id value = [mutableAddressList objectAtIndex:index];
  return value;
}
- (NSArray*) keywordsList {
  return mutableKeywordsList;
}
- (NSString*) keywordsAtIndex:(int32_t) index {
  id value = [mutableKeywordsList objectAtIndex:index];
  return value;
}
- (NSArray*) typicalDishesList {
  return mutableTypicalDishesList;
}
- (NSString*) typicalDishesAtIndex:(int32_t) index {
  id value = [mutableTypicalDishesList objectAtIndex:index];
  return value;
}
- (NSArray*) roomsList {
  return mutableRoomsList;
}
- (HotelRoom*) roomsAtIndex:(int32_t) index {
  id value = [mutableRoomsList objectAtIndex:index];
  return value;
}
- (BOOL) isInitialized {
  if (!self.hasPlaceId) {
    return NO;
  }
  if (!self.hasCategoryId) {
    return NO;
  }
  if (!self.hasSubCategoryId) {
    return NO;
  }
  if (!self.hasName) {
    return NO;
  }
  if (!self.hasRank) {
    return NO;
  }
  if (!self.hasLongitude) {
    return NO;
  }
  if (!self.hasLatitude) {
    return NO;
  }
  if (!self.hasIcon) {
    return NO;
  }
  if (!self.hasIntroduction) {
    return NO;
  }
  for (HotelRoom* element in self.roomsList) {
    if (!element.isInitialized) {
      return NO;
    }
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasPlaceId) {
    [output writeInt32:1 value:self.placeId];
  }
  if (self.hasCityId) {
    [output writeInt32:2 value:self.cityId];
  }
  if (self.hasCategoryId) {
    [output writeInt32:3 value:self.categoryId];
  }
  if (self.hasSubCategoryId) {
    [output writeInt32:4 value:self.subCategoryId];
  }
  if (self.hasName) {
    [output writeString:5 value:self.name];
  }
  if (self.hasRank) {
    [output writeInt32:6 value:self.rank];
  }
  for (NSNumber* value in self.mutableProvidedServiceIdList) {
    [output writeInt32:7 value:[value intValue]];
  }
  if (self.hasLongitude) {
    [output writeDouble:11 value:self.longitude];
  }
  if (self.hasLatitude) {
    [output writeDouble:12 value:self.latitude];
  }
  if (self.hasAreaId) {
    [output writeInt32:13 value:self.areaId];
  }
  if (self.hasPrice) {
    [output writeString:21 value:self.price];
  }
  if (self.hasAvgPrice) {
    [output writeString:22 value:self.avgPrice];
  }
  if (self.hasPriceRank) {
    [output writeInt32:23 value:self.priceRank];
  }
  if (self.hasIcon) {
    [output writeString:31 value:self.icon];
  }
  for (NSString* element in self.mutableImagesList) {
    [output writeString:32 value:element];
  }
  if (self.hasIntroduction) {
    [output writeString:33 value:self.introduction];
  }
  if (self.hasTransportation) {
    [output writeString:34 value:self.transportation];
  }
  for (NSString* element in self.mutableTelephoneList) {
    [output writeString:35 value:element];
  }
  for (NSString* element in self.mutableAddressList) {
    [output writeString:36 value:element];
  }
  if (self.hasWebsite) {
    [output writeString:37 value:self.website];
  }
  if (self.hasPriceDescription) {
    [output writeString:38 value:self.priceDescription];
  }
  if (self.hasOpenTime) {
    [output writeString:39 value:self.openTime];
  }
  if (self.hasTips) {
    [output writeString:40 value:self.tips];
  }
  for (NSString* element in self.mutableKeywordsList) {
    [output writeString:41 value:element];
  }
  for (NSString* element in self.mutableTypicalDishesList) {
    [output writeString:42 value:element];
  }
  if (self.hasHotelStar) {
    [output writeInt32:43 value:self.hotelStar];
  }
  if (self.hasParkingGuide) {
    [output writeString:44 value:self.parkingGuide];
  }
  if (self.hasPlaceFavoriteCount) {
    [output writeInt32:60 value:self.placeFavoriteCount];
  }
  if (self.hasHasDiscount) {
    [output writeInt32:61 value:self.hasDiscount];
  }
  for (HotelRoom* element in self.roomsList) {
    [output writeMessage:70 value:element];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasPlaceId) {
    size += computeInt32Size(1, self.placeId);
  }
  if (self.hasCityId) {
    size += computeInt32Size(2, self.cityId);
  }
  if (self.hasCategoryId) {
    size += computeInt32Size(3, self.categoryId);
  }
  if (self.hasSubCategoryId) {
    size += computeInt32Size(4, self.subCategoryId);
  }
  if (self.hasName) {
    size += computeStringSize(5, self.name);
  }
  if (self.hasRank) {
    size += computeInt32Size(6, self.rank);
  }
  {
    int32_t dataSize = 0;
    for (NSNumber* value in self.mutableProvidedServiceIdList) {
      dataSize += computeInt32SizeNoTag([value intValue]);
    }
    size += dataSize;
    size += 1 * self.mutableProvidedServiceIdList.count;
  }
  if (self.hasLongitude) {
    size += computeDoubleSize(11, self.longitude);
  }
  if (self.hasLatitude) {
    size += computeDoubleSize(12, self.latitude);
  }
  if (self.hasAreaId) {
    size += computeInt32Size(13, self.areaId);
  }
  if (self.hasPrice) {
    size += computeStringSize(21, self.price);
  }
  if (self.hasAvgPrice) {
    size += computeStringSize(22, self.avgPrice);
  }
  if (self.hasPriceRank) {
    size += computeInt32Size(23, self.priceRank);
  }
  if (self.hasIcon) {
    size += computeStringSize(31, self.icon);
  }
  {
    int32_t dataSize = 0;
    for (NSString* element in self.mutableImagesList) {
      dataSize += computeStringSizeNoTag(element);
    }
    size += dataSize;
    size += 2 * self.mutableImagesList.count;
  }
  if (self.hasIntroduction) {
    size += computeStringSize(33, self.introduction);
  }
  if (self.hasTransportation) {
    size += computeStringSize(34, self.transportation);
  }
  {
    int32_t dataSize = 0;
    for (NSString* element in self.mutableTelephoneList) {
      dataSize += computeStringSizeNoTag(element);
    }
    size += dataSize;
    size += 2 * self.mutableTelephoneList.count;
  }
  {
    int32_t dataSize = 0;
    for (NSString* element in self.mutableAddressList) {
      dataSize += computeStringSizeNoTag(element);
    }
    size += dataSize;
    size += 2 * self.mutableAddressList.count;
  }
  if (self.hasWebsite) {
    size += computeStringSize(37, self.website);
  }
  if (self.hasPriceDescription) {
    size += computeStringSize(38, self.priceDescription);
  }
  if (self.hasOpenTime) {
    size += computeStringSize(39, self.openTime);
  }
  if (self.hasTips) {
    size += computeStringSize(40, self.tips);
  }
  {
    int32_t dataSize = 0;
    for (NSString* element in self.mutableKeywordsList) {
      dataSize += computeStringSizeNoTag(element);
    }
    size += dataSize;
    size += 2 * self.mutableKeywordsList.count;
  }
  {
    int32_t dataSize = 0;
    for (NSString* element in self.mutableTypicalDishesList) {
      dataSize += computeStringSizeNoTag(element);
    }
    size += dataSize;
    size += 2 * self.mutableTypicalDishesList.count;
  }
  if (self.hasHotelStar) {
    size += computeInt32Size(43, self.hotelStar);
  }
  if (self.hasParkingGuide) {
    size += computeStringSize(44, self.parkingGuide);
  }
  if (self.hasPlaceFavoriteCount) {
    size += computeInt32Size(60, self.placeFavoriteCount);
  }
  if (self.hasHasDiscount) {
    size += computeInt32Size(61, self.hasDiscount);
  }
  for (HotelRoom* element in self.roomsList) {
    size += computeMessageSize(70, element);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (Place*) parseFromData:(NSData*) data {
  return (Place*)[[[Place builder] mergeFromData:data] build];
}
+ (Place*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (Place*)[[[Place builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (Place*) parseFromInputStream:(NSInputStream*) input {
  return (Place*)[[[Place builder] mergeFromInputStream:input] build];
}
+ (Place*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (Place*)[[[Place builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (Place*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (Place*)[[[Place builder] mergeFromCodedInputStream:input] build];
}
+ (Place*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (Place*)[[[Place builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (Place_Builder*) builder {
  return [[[Place_Builder alloc] init] autorelease];
}
+ (Place_Builder*) builderWithPrototype:(Place*) prototype {
  return [[Place builder] mergeFrom:prototype];
}
- (Place_Builder*) builder {
  return [Place builder];
}
@end

@interface Place_Builder()
@property (retain) Place* result;
@end

@implementation Place_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[Place alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (Place_Builder*) clear {
  self.result = [[[Place alloc] init] autorelease];
  return self;
}
- (Place_Builder*) clone {
  return [Place builderWithPrototype:result];
}
- (Place*) defaultInstance {
  return [Place defaultInstance];
}
- (Place*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (Place*) buildPartial {
  Place* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (Place_Builder*) mergeFrom:(Place*) other {
  if (other == [Place defaultInstance]) {
    return self;
  }
  if (other.hasPlaceId) {
    [self setPlaceId:other.placeId];
  }
  if (other.hasCityId) {
    [self setCityId:other.cityId];
  }
  if (other.hasCategoryId) {
    [self setCategoryId:other.categoryId];
  }
  if (other.hasSubCategoryId) {
    [self setSubCategoryId:other.subCategoryId];
  }
  if (other.hasName) {
    [self setName:other.name];
  }
  if (other.hasRank) {
    [self setRank:other.rank];
  }
  if (other.mutableProvidedServiceIdList.count > 0) {
    if (result.mutableProvidedServiceIdList == nil) {
      result.mutableProvidedServiceIdList = [NSMutableArray array];
    }
    [result.mutableProvidedServiceIdList addObjectsFromArray:other.mutableProvidedServiceIdList];
  }
  if (other.hasLongitude) {
    [self setLongitude:other.longitude];
  }
  if (other.hasLatitude) {
    [self setLatitude:other.latitude];
  }
  if (other.hasAreaId) {
    [self setAreaId:other.areaId];
  }
  if (other.hasPrice) {
    [self setPrice:other.price];
  }
  if (other.hasAvgPrice) {
    [self setAvgPrice:other.avgPrice];
  }
  if (other.hasPriceRank) {
    [self setPriceRank:other.priceRank];
  }
  if (other.hasIcon) {
    [self setIcon:other.icon];
  }
  if (other.mutableImagesList.count > 0) {
    if (result.mutableImagesList == nil) {
      result.mutableImagesList = [NSMutableArray array];
    }
    [result.mutableImagesList addObjectsFromArray:other.mutableImagesList];
  }
  if (other.hasIntroduction) {
    [self setIntroduction:other.introduction];
  }
  if (other.hasTransportation) {
    [self setTransportation:other.transportation];
  }
  if (other.mutableTelephoneList.count > 0) {
    if (result.mutableTelephoneList == nil) {
      result.mutableTelephoneList = [NSMutableArray array];
    }
    [result.mutableTelephoneList addObjectsFromArray:other.mutableTelephoneList];
  }
  if (other.mutableAddressList.count > 0) {
    if (result.mutableAddressList == nil) {
      result.mutableAddressList = [NSMutableArray array];
    }
    [result.mutableAddressList addObjectsFromArray:other.mutableAddressList];
  }
  if (other.hasWebsite) {
    [self setWebsite:other.website];
  }
  if (other.hasPriceDescription) {
    [self setPriceDescription:other.priceDescription];
  }
  if (other.hasOpenTime) {
    [self setOpenTime:other.openTime];
  }
  if (other.hasTips) {
    [self setTips:other.tips];
  }
  if (other.mutableKeywordsList.count > 0) {
    if (result.mutableKeywordsList == nil) {
      result.mutableKeywordsList = [NSMutableArray array];
    }
    [result.mutableKeywordsList addObjectsFromArray:other.mutableKeywordsList];
  }
  if (other.mutableTypicalDishesList.count > 0) {
    if (result.mutableTypicalDishesList == nil) {
      result.mutableTypicalDishesList = [NSMutableArray array];
    }
    [result.mutableTypicalDishesList addObjectsFromArray:other.mutableTypicalDishesList];
  }
  if (other.hasHotelStar) {
    [self setHotelStar:other.hotelStar];
  }
  if (other.hasParkingGuide) {
    [self setParkingGuide:other.parkingGuide];
  }
  if (other.hasPlaceFavoriteCount) {
    [self setPlaceFavoriteCount:other.placeFavoriteCount];
  }
  if (other.hasHasDiscount) {
    [self setHasDiscount:other.hasDiscount];
  }
  if (other.mutableRoomsList.count > 0) {
    if (result.mutableRoomsList == nil) {
      result.mutableRoomsList = [NSMutableArray array];
    }
    [result.mutableRoomsList addObjectsFromArray:other.mutableRoomsList];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (Place_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (Place_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setPlaceId:[input readInt32]];
        break;
      }
      case 16: {
        [self setCityId:[input readInt32]];
        break;
      }
      case 24: {
        [self setCategoryId:[input readInt32]];
        break;
      }
      case 32: {
        [self setSubCategoryId:[input readInt32]];
        break;
      }
      case 42: {
        [self setName:[input readString]];
        break;
      }
      case 48: {
        [self setRank:[input readInt32]];
        break;
      }
      case 56: {
        [self addProvidedServiceId:[input readInt32]];
        break;
      }
      case 89: {
        [self setLongitude:[input readDouble]];
        break;
      }
      case 97: {
        [self setLatitude:[input readDouble]];
        break;
      }
      case 104: {
        [self setAreaId:[input readInt32]];
        break;
      }
      case 170: {
        [self setPrice:[input readString]];
        break;
      }
      case 178: {
        [self setAvgPrice:[input readString]];
        break;
      }
      case 184: {
        [self setPriceRank:[input readInt32]];
        break;
      }
      case 250: {
        [self setIcon:[input readString]];
        break;
      }
      case 258: {
        [self addImages:[input readString]];
        break;
      }
      case 266: {
        [self setIntroduction:[input readString]];
        break;
      }
      case 274: {
        [self setTransportation:[input readString]];
        break;
      }
      case 282: {
        [self addTelephone:[input readString]];
        break;
      }
      case 290: {
        [self addAddress:[input readString]];
        break;
      }
      case 298: {
        [self setWebsite:[input readString]];
        break;
      }
      case 306: {
        [self setPriceDescription:[input readString]];
        break;
      }
      case 314: {
        [self setOpenTime:[input readString]];
        break;
      }
      case 322: {
        [self setTips:[input readString]];
        break;
      }
      case 330: {
        [self addKeywords:[input readString]];
        break;
      }
      case 338: {
        [self addTypicalDishes:[input readString]];
        break;
      }
      case 344: {
        [self setHotelStar:[input readInt32]];
        break;
      }
      case 354: {
        [self setParkingGuide:[input readString]];
        break;
      }
      case 480: {
        [self setPlaceFavoriteCount:[input readInt32]];
        break;
      }
      case 488: {
        [self setHasDiscount:[input readInt32]];
        break;
      }
      case 562: {
        HotelRoom_Builder* subBuilder = [HotelRoom builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addRooms:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (BOOL) hasPlaceId {
  return result.hasPlaceId;
}
- (int32_t) placeId {
  return result.placeId;
}
- (Place_Builder*) setPlaceId:(int32_t) value {
  result.hasPlaceId = YES;
  result.placeId = value;
  return self;
}
- (Place_Builder*) clearPlaceId {
  result.hasPlaceId = NO;
  result.placeId = 0;
  return self;
}
- (BOOL) hasCityId {
  return result.hasCityId;
}
- (int32_t) cityId {
  return result.cityId;
}
- (Place_Builder*) setCityId:(int32_t) value {
  result.hasCityId = YES;
  result.cityId = value;
  return self;
}
- (Place_Builder*) clearCityId {
  result.hasCityId = NO;
  result.cityId = 0;
  return self;
}
- (BOOL) hasCategoryId {
  return result.hasCategoryId;
}
- (int32_t) categoryId {
  return result.categoryId;
}
- (Place_Builder*) setCategoryId:(int32_t) value {
  result.hasCategoryId = YES;
  result.categoryId = value;
  return self;
}
- (Place_Builder*) clearCategoryId {
  result.hasCategoryId = NO;
  result.categoryId = 0;
  return self;
}
- (BOOL) hasSubCategoryId {
  return result.hasSubCategoryId;
}
- (int32_t) subCategoryId {
  return result.subCategoryId;
}
- (Place_Builder*) setSubCategoryId:(int32_t) value {
  result.hasSubCategoryId = YES;
  result.subCategoryId = value;
  return self;
}
- (Place_Builder*) clearSubCategoryId {
  result.hasSubCategoryId = NO;
  result.subCategoryId = 0;
  return self;
}
- (BOOL) hasName {
  return result.hasName;
}
- (NSString*) name {
  return result.name;
}
- (Place_Builder*) setName:(NSString*) value {
  result.hasName = YES;
  result.name = value;
  return self;
}
- (Place_Builder*) clearName {
  result.hasName = NO;
  result.name = @"";
  return self;
}
- (BOOL) hasRank {
  return result.hasRank;
}
- (int32_t) rank {
  return result.rank;
}
- (Place_Builder*) setRank:(int32_t) value {
  result.hasRank = YES;
  result.rank = value;
  return self;
}
- (Place_Builder*) clearRank {
  result.hasRank = NO;
  result.rank = 0;
  return self;
}
- (NSArray*) providedServiceIdList {
  if (result.mutableProvidedServiceIdList == nil) {
    return [NSArray array];
  }
  return result.mutableProvidedServiceIdList;
}
- (int32_t) providedServiceIdAtIndex:(int32_t) index {
  return [result providedServiceIdAtIndex:index];
}
- (Place_Builder*) replaceProvidedServiceIdAtIndex:(int32_t) index with:(int32_t) value {
  [result.mutableProvidedServiceIdList replaceObjectAtIndex:index withObject:[NSNumber numberWithInt:value]];
  return self;
}
- (Place_Builder*) addProvidedServiceId:(int32_t) value {
  if (result.mutableProvidedServiceIdList == nil) {
    result.mutableProvidedServiceIdList = [NSMutableArray array];
  }
  [result.mutableProvidedServiceIdList addObject:[NSNumber numberWithInt:value]];
  return self;
}
- (Place_Builder*) addAllProvidedServiceId:(NSArray*) values {
  if (result.mutableProvidedServiceIdList == nil) {
    result.mutableProvidedServiceIdList = [NSMutableArray array];
  }
  [result.mutableProvidedServiceIdList addObjectsFromArray:values];
  return self;
}
- (Place_Builder*) clearProvidedServiceIdList {
  result.mutableProvidedServiceIdList = nil;
  return self;
}
- (BOOL) hasLongitude {
  return result.hasLongitude;
}
- (Float64) longitude {
  return result.longitude;
}
- (Place_Builder*) setLongitude:(Float64) value {
  result.hasLongitude = YES;
  result.longitude = value;
  return self;
}
- (Place_Builder*) clearLongitude {
  result.hasLongitude = NO;
  result.longitude = 0;
  return self;
}
- (BOOL) hasLatitude {
  return result.hasLatitude;
}
- (Float64) latitude {
  return result.latitude;
}
- (Place_Builder*) setLatitude:(Float64) value {
  result.hasLatitude = YES;
  result.latitude = value;
  return self;
}
- (Place_Builder*) clearLatitude {
  result.hasLatitude = NO;
  result.latitude = 0;
  return self;
}
- (BOOL) hasAreaId {
  return result.hasAreaId;
}
- (int32_t) areaId {
  return result.areaId;
}
- (Place_Builder*) setAreaId:(int32_t) value {
  result.hasAreaId = YES;
  result.areaId = value;
  return self;
}
- (Place_Builder*) clearAreaId {
  result.hasAreaId = NO;
  result.areaId = 0;
  return self;
}
- (BOOL) hasPrice {
  return result.hasPrice;
}
- (NSString*) price {
  return result.price;
}
- (Place_Builder*) setPrice:(NSString*) value {
  result.hasPrice = YES;
  result.price = value;
  return self;
}
- (Place_Builder*) clearPrice {
  result.hasPrice = NO;
  result.price = @"";
  return self;
}
- (BOOL) hasAvgPrice {
  return result.hasAvgPrice;
}
- (NSString*) avgPrice {
  return result.avgPrice;
}
- (Place_Builder*) setAvgPrice:(NSString*) value {
  result.hasAvgPrice = YES;
  result.avgPrice = value;
  return self;
}
- (Place_Builder*) clearAvgPrice {
  result.hasAvgPrice = NO;
  result.avgPrice = @"";
  return self;
}
- (BOOL) hasPriceRank {
  return result.hasPriceRank;
}
- (int32_t) priceRank {
  return result.priceRank;
}
- (Place_Builder*) setPriceRank:(int32_t) value {
  result.hasPriceRank = YES;
  result.priceRank = value;
  return self;
}
- (Place_Builder*) clearPriceRank {
  result.hasPriceRank = NO;
  result.priceRank = 0;
  return self;
}
- (BOOL) hasIcon {
  return result.hasIcon;
}
- (NSString*) icon {
  return result.icon;
}
- (Place_Builder*) setIcon:(NSString*) value {
  result.hasIcon = YES;
  result.icon = value;
  return self;
}
- (Place_Builder*) clearIcon {
  result.hasIcon = NO;
  result.icon = @"";
  return self;
}
- (NSArray*) imagesList {
  if (result.mutableImagesList == nil) {
    return [NSArray array];
  }
  return result.mutableImagesList;
}
- (NSString*) imagesAtIndex:(int32_t) index {
  return [result imagesAtIndex:index];
}
- (Place_Builder*) replaceImagesAtIndex:(int32_t) index with:(NSString*) value {
  [result.mutableImagesList replaceObjectAtIndex:index withObject:value];
  return self;
}
- (Place_Builder*) addImages:(NSString*) value {
  if (result.mutableImagesList == nil) {
    result.mutableImagesList = [NSMutableArray array];
  }
  [result.mutableImagesList addObject:value];
  return self;
}
- (Place_Builder*) addAllImages:(NSArray*) values {
  if (result.mutableImagesList == nil) {
    result.mutableImagesList = [NSMutableArray array];
  }
  [result.mutableImagesList addObjectsFromArray:values];
  return self;
}
- (Place_Builder*) clearImagesList {
  result.mutableImagesList = nil;
  return self;
}
- (BOOL) hasIntroduction {
  return result.hasIntroduction;
}
- (NSString*) introduction {
  return result.introduction;
}
- (Place_Builder*) setIntroduction:(NSString*) value {
  result.hasIntroduction = YES;
  result.introduction = value;
  return self;
}
- (Place_Builder*) clearIntroduction {
  result.hasIntroduction = NO;
  result.introduction = @"";
  return self;
}
- (BOOL) hasTransportation {
  return result.hasTransportation;
}
- (NSString*) transportation {
  return result.transportation;
}
- (Place_Builder*) setTransportation:(NSString*) value {
  result.hasTransportation = YES;
  result.transportation = value;
  return self;
}
- (Place_Builder*) clearTransportation {
  result.hasTransportation = NO;
  result.transportation = @"";
  return self;
}
- (NSArray*) telephoneList {
  if (result.mutableTelephoneList == nil) {
    return [NSArray array];
  }
  return result.mutableTelephoneList;
}
- (NSString*) telephoneAtIndex:(int32_t) index {
  return [result telephoneAtIndex:index];
}
- (Place_Builder*) replaceTelephoneAtIndex:(int32_t) index with:(NSString*) value {
  [result.mutableTelephoneList replaceObjectAtIndex:index withObject:value];
  return self;
}
- (Place_Builder*) addTelephone:(NSString*) value {
  if (result.mutableTelephoneList == nil) {
    result.mutableTelephoneList = [NSMutableArray array];
  }
  [result.mutableTelephoneList addObject:value];
  return self;
}
- (Place_Builder*) addAllTelephone:(NSArray*) values {
  if (result.mutableTelephoneList == nil) {
    result.mutableTelephoneList = [NSMutableArray array];
  }
  [result.mutableTelephoneList addObjectsFromArray:values];
  return self;
}
- (Place_Builder*) clearTelephoneList {
  result.mutableTelephoneList = nil;
  return self;
}
- (NSArray*) addressList {
  if (result.mutableAddressList == nil) {
    return [NSArray array];
  }
  return result.mutableAddressList;
}
- (NSString*) addressAtIndex:(int32_t) index {
  return [result addressAtIndex:index];
}
- (Place_Builder*) replaceAddressAtIndex:(int32_t) index with:(NSString*) value {
  [result.mutableAddressList replaceObjectAtIndex:index withObject:value];
  return self;
}
- (Place_Builder*) addAddress:(NSString*) value {
  if (result.mutableAddressList == nil) {
    result.mutableAddressList = [NSMutableArray array];
  }
  [result.mutableAddressList addObject:value];
  return self;
}
- (Place_Builder*) addAllAddress:(NSArray*) values {
  if (result.mutableAddressList == nil) {
    result.mutableAddressList = [NSMutableArray array];
  }
  [result.mutableAddressList addObjectsFromArray:values];
  return self;
}
- (Place_Builder*) clearAddressList {
  result.mutableAddressList = nil;
  return self;
}
- (BOOL) hasWebsite {
  return result.hasWebsite;
}
- (NSString*) website {
  return result.website;
}
- (Place_Builder*) setWebsite:(NSString*) value {
  result.hasWebsite = YES;
  result.website = value;
  return self;
}
- (Place_Builder*) clearWebsite {
  result.hasWebsite = NO;
  result.website = @"";
  return self;
}
- (BOOL) hasPriceDescription {
  return result.hasPriceDescription;
}
- (NSString*) priceDescription {
  return result.priceDescription;
}
- (Place_Builder*) setPriceDescription:(NSString*) value {
  result.hasPriceDescription = YES;
  result.priceDescription = value;
  return self;
}
- (Place_Builder*) clearPriceDescription {
  result.hasPriceDescription = NO;
  result.priceDescription = @"";
  return self;
}
- (BOOL) hasOpenTime {
  return result.hasOpenTime;
}
- (NSString*) openTime {
  return result.openTime;
}
- (Place_Builder*) setOpenTime:(NSString*) value {
  result.hasOpenTime = YES;
  result.openTime = value;
  return self;
}
- (Place_Builder*) clearOpenTime {
  result.hasOpenTime = NO;
  result.openTime = @"";
  return self;
}
- (BOOL) hasTips {
  return result.hasTips;
}
- (NSString*) tips {
  return result.tips;
}
- (Place_Builder*) setTips:(NSString*) value {
  result.hasTips = YES;
  result.tips = value;
  return self;
}
- (Place_Builder*) clearTips {
  result.hasTips = NO;
  result.tips = @"";
  return self;
}
- (NSArray*) keywordsList {
  if (result.mutableKeywordsList == nil) {
    return [NSArray array];
  }
  return result.mutableKeywordsList;
}
- (NSString*) keywordsAtIndex:(int32_t) index {
  return [result keywordsAtIndex:index];
}
- (Place_Builder*) replaceKeywordsAtIndex:(int32_t) index with:(NSString*) value {
  [result.mutableKeywordsList replaceObjectAtIndex:index withObject:value];
  return self;
}
- (Place_Builder*) addKeywords:(NSString*) value {
  if (result.mutableKeywordsList == nil) {
    result.mutableKeywordsList = [NSMutableArray array];
  }
  [result.mutableKeywordsList addObject:value];
  return self;
}
- (Place_Builder*) addAllKeywords:(NSArray*) values {
  if (result.mutableKeywordsList == nil) {
    result.mutableKeywordsList = [NSMutableArray array];
  }
  [result.mutableKeywordsList addObjectsFromArray:values];
  return self;
}
- (Place_Builder*) clearKeywordsList {
  result.mutableKeywordsList = nil;
  return self;
}
- (NSArray*) typicalDishesList {
  if (result.mutableTypicalDishesList == nil) {
    return [NSArray array];
  }
  return result.mutableTypicalDishesList;
}
- (NSString*) typicalDishesAtIndex:(int32_t) index {
  return [result typicalDishesAtIndex:index];
}
- (Place_Builder*) replaceTypicalDishesAtIndex:(int32_t) index with:(NSString*) value {
  [result.mutableTypicalDishesList replaceObjectAtIndex:index withObject:value];
  return self;
}
- (Place_Builder*) addTypicalDishes:(NSString*) value {
  if (result.mutableTypicalDishesList == nil) {
    result.mutableTypicalDishesList = [NSMutableArray array];
  }
  [result.mutableTypicalDishesList addObject:value];
  return self;
}
- (Place_Builder*) addAllTypicalDishes:(NSArray*) values {
  if (result.mutableTypicalDishesList == nil) {
    result.mutableTypicalDishesList = [NSMutableArray array];
  }
  [result.mutableTypicalDishesList addObjectsFromArray:values];
  return self;
}
- (Place_Builder*) clearTypicalDishesList {
  result.mutableTypicalDishesList = nil;
  return self;
}
- (BOOL) hasHotelStar {
  return result.hasHotelStar;
}
- (int32_t) hotelStar {
  return result.hotelStar;
}
- (Place_Builder*) setHotelStar:(int32_t) value {
  result.hasHotelStar = YES;
  result.hotelStar = value;
  return self;
}
- (Place_Builder*) clearHotelStar {
  result.hasHotelStar = NO;
  result.hotelStar = 0;
  return self;
}
- (BOOL) hasParkingGuide {
  return result.hasParkingGuide;
}
- (NSString*) parkingGuide {
  return result.parkingGuide;
}
- (Place_Builder*) setParkingGuide:(NSString*) value {
  result.hasParkingGuide = YES;
  result.parkingGuide = value;
  return self;
}
- (Place_Builder*) clearParkingGuide {
  result.hasParkingGuide = NO;
  result.parkingGuide = @"";
  return self;
}
- (BOOL) hasPlaceFavoriteCount {
  return result.hasPlaceFavoriteCount;
}
- (int32_t) placeFavoriteCount {
  return result.placeFavoriteCount;
}
- (Place_Builder*) setPlaceFavoriteCount:(int32_t) value {
  result.hasPlaceFavoriteCount = YES;
  result.placeFavoriteCount = value;
  return self;
}
- (Place_Builder*) clearPlaceFavoriteCount {
  result.hasPlaceFavoriteCount = NO;
  result.placeFavoriteCount = 0;
  return self;
}
- (BOOL) hasHasDiscount {
  return result.hasHasDiscount;
}
- (int32_t) hasDiscount {
  return result.hasDiscount;
}
- (Place_Builder*) setHasDiscount:(int32_t) value {
  result.hasHasDiscount = YES;
  result.hasDiscount = value;
  return self;
}
- (Place_Builder*) clearHasDiscount {
  result.hasHasDiscount = NO;
  result.hasDiscount = 0;
  return self;
}
- (NSArray*) roomsList {
  if (result.mutableRoomsList == nil) { return [NSArray array]; }
  return result.mutableRoomsList;
}
- (HotelRoom*) roomsAtIndex:(int32_t) index {
  return [result roomsAtIndex:index];
}
- (Place_Builder*) replaceRoomsAtIndex:(int32_t) index with:(HotelRoom*) value {
  [result.mutableRoomsList replaceObjectAtIndex:index withObject:value];
  return self;
}
- (Place_Builder*) addAllRooms:(NSArray*) values {
  if (result.mutableRoomsList == nil) {
    result.mutableRoomsList = [NSMutableArray array];
  }
  [result.mutableRoomsList addObjectsFromArray:values];
  return self;
}
- (Place_Builder*) clearRoomsList {
  result.mutableRoomsList = nil;
  return self;
}
- (Place_Builder*) addRooms:(HotelRoom*) value {
  if (result.mutableRoomsList == nil) {
    result.mutableRoomsList = [NSMutableArray array];
  }
  [result.mutableRoomsList addObject:value];
  return self;
}
@end

@interface PlaceList ()
@property (retain) NSMutableArray* mutableListList;
@property int32_t cityId;
@end

@implementation PlaceList

@synthesize mutableListList;
- (BOOL) hasCityId {
  return !!hasCityId_;
}
- (void) setHasCityId:(BOOL) value {
  hasCityId_ = !!value;
}
@synthesize cityId;
- (void) dealloc {
  self.mutableListList = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.cityId = 0;
  }
  return self;
}
static PlaceList* defaultPlaceListInstance = nil;
+ (void) initialize {
  if (self == [PlaceList class]) {
    defaultPlaceListInstance = [[PlaceList alloc] init];
  }
}
+ (PlaceList*) defaultInstance {
  return defaultPlaceListInstance;
}
- (PlaceList*) defaultInstance {
  return defaultPlaceListInstance;
}
- (NSArray*) listList {
  return mutableListList;
}
- (Place*) listAtIndex:(int32_t) index {
  id value = [mutableListList objectAtIndex:index];
  return value;
}
- (BOOL) isInitialized {
  for (Place* element in self.listList) {
    if (!element.isInitialized) {
      return NO;
    }
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  for (Place* element in self.listList) {
    [output writeMessage:1 value:element];
  }
  if (self.hasCityId) {
    [output writeInt32:2 value:self.cityId];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  for (Place* element in self.listList) {
    size += computeMessageSize(1, element);
  }
  if (self.hasCityId) {
    size += computeInt32Size(2, self.cityId);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (PlaceList*) parseFromData:(NSData*) data {
  return (PlaceList*)[[[PlaceList builder] mergeFromData:data] build];
}
+ (PlaceList*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PlaceList*)[[[PlaceList builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (PlaceList*) parseFromInputStream:(NSInputStream*) input {
  return (PlaceList*)[[[PlaceList builder] mergeFromInputStream:input] build];
}
+ (PlaceList*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PlaceList*)[[[PlaceList builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PlaceList*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (PlaceList*)[[[PlaceList builder] mergeFromCodedInputStream:input] build];
}
+ (PlaceList*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PlaceList*)[[[PlaceList builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PlaceList_Builder*) builder {
  return [[[PlaceList_Builder alloc] init] autorelease];
}
+ (PlaceList_Builder*) builderWithPrototype:(PlaceList*) prototype {
  return [[PlaceList builder] mergeFrom:prototype];
}
- (PlaceList_Builder*) builder {
  return [PlaceList builder];
}
@end

@interface PlaceList_Builder()
@property (retain) PlaceList* result;
@end

@implementation PlaceList_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[PlaceList alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (PlaceList_Builder*) clear {
  self.result = [[[PlaceList alloc] init] autorelease];
  return self;
}
- (PlaceList_Builder*) clone {
  return [PlaceList builderWithPrototype:result];
}
- (PlaceList*) defaultInstance {
  return [PlaceList defaultInstance];
}
- (PlaceList*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (PlaceList*) buildPartial {
  PlaceList* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (PlaceList_Builder*) mergeFrom:(PlaceList*) other {
  if (other == [PlaceList defaultInstance]) {
    return self;
  }
  if (other.mutableListList.count > 0) {
    if (result.mutableListList == nil) {
      result.mutableListList = [NSMutableArray array];
    }
    [result.mutableListList addObjectsFromArray:other.mutableListList];
  }
  if (other.hasCityId) {
    [self setCityId:other.cityId];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (PlaceList_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (PlaceList_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        Place_Builder* subBuilder = [Place builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addList:[subBuilder buildPartial]];
        break;
      }
      case 16: {
        [self setCityId:[input readInt32]];
        break;
      }
    }
  }
}
- (NSArray*) listList {
  if (result.mutableListList == nil) { return [NSArray array]; }
  return result.mutableListList;
}
- (Place*) listAtIndex:(int32_t) index {
  return [result listAtIndex:index];
}
- (PlaceList_Builder*) replaceListAtIndex:(int32_t) index with:(Place*) value {
  [result.mutableListList replaceObjectAtIndex:index withObject:value];
  return self;
}
- (PlaceList_Builder*) addAllList:(NSArray*) values {
  if (result.mutableListList == nil) {
    result.mutableListList = [NSMutableArray array];
  }
  [result.mutableListList addObjectsFromArray:values];
  return self;
}
- (PlaceList_Builder*) clearListList {
  result.mutableListList = nil;
  return self;
}
- (PlaceList_Builder*) addList:(Place*) value {
  if (result.mutableListList == nil) {
    result.mutableListList = [NSMutableArray array];
  }
  [result.mutableListList addObject:value];
  return self;
}
- (BOOL) hasCityId {
  return result.hasCityId;
}
- (int32_t) cityId {
  return result.cityId;
}
- (PlaceList_Builder*) setCityId:(int32_t) value {
  result.hasCityId = YES;
  result.cityId = value;
  return self;
}
- (PlaceList_Builder*) clearCityId {
  result.hasCityId = NO;
  result.cityId = 0;
  return self;
}
@end

@interface Statistics ()
@property int32_t id;
@property (retain) NSString* name;
@property int32_t count;
@end

@implementation Statistics

- (BOOL) hasId {
  return !!hasId_;
}
- (void) setHasId:(BOOL) value {
  hasId_ = !!value;
}
@synthesize id;
- (BOOL) hasName {
  return !!hasName_;
}
- (void) setHasName:(BOOL) value {
  hasName_ = !!value;
}
@synthesize name;
- (BOOL) hasCount {
  return !!hasCount_;
}
- (void) setHasCount:(BOOL) value {
  hasCount_ = !!value;
}
@synthesize count;
- (void) dealloc {
  self.name = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.id = 0;
    self.name = @"";
    self.count = 0;
  }
  return self;
}
static Statistics* defaultStatisticsInstance = nil;
+ (void) initialize {
  if (self == [Statistics class]) {
    defaultStatisticsInstance = [[Statistics alloc] init];
  }
}
+ (Statistics*) defaultInstance {
  return defaultStatisticsInstance;
}
- (Statistics*) defaultInstance {
  return defaultStatisticsInstance;
}
- (BOOL) isInitialized {
  if (!self.hasId) {
    return NO;
  }
  if (!self.hasName) {
    return NO;
  }
  if (!self.hasCount) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasId) {
    [output writeInt32:1 value:self.id];
  }
  if (self.hasName) {
    [output writeString:2 value:self.name];
  }
  if (self.hasCount) {
    [output writeInt32:3 value:self.count];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasId) {
    size += computeInt32Size(1, self.id);
  }
  if (self.hasName) {
    size += computeStringSize(2, self.name);
  }
  if (self.hasCount) {
    size += computeInt32Size(3, self.count);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (Statistics*) parseFromData:(NSData*) data {
  return (Statistics*)[[[Statistics builder] mergeFromData:data] build];
}
+ (Statistics*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (Statistics*)[[[Statistics builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (Statistics*) parseFromInputStream:(NSInputStream*) input {
  return (Statistics*)[[[Statistics builder] mergeFromInputStream:input] build];
}
+ (Statistics*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (Statistics*)[[[Statistics builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (Statistics*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (Statistics*)[[[Statistics builder] mergeFromCodedInputStream:input] build];
}
+ (Statistics*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (Statistics*)[[[Statistics builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (Statistics_Builder*) builder {
  return [[[Statistics_Builder alloc] init] autorelease];
}
+ (Statistics_Builder*) builderWithPrototype:(Statistics*) prototype {
  return [[Statistics builder] mergeFrom:prototype];
}
- (Statistics_Builder*) builder {
  return [Statistics builder];
}
@end

@interface Statistics_Builder()
@property (retain) Statistics* result;
@end

@implementation Statistics_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[Statistics alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (Statistics_Builder*) clear {
  self.result = [[[Statistics alloc] init] autorelease];
  return self;
}
- (Statistics_Builder*) clone {
  return [Statistics builderWithPrototype:result];
}
- (Statistics*) defaultInstance {
  return [Statistics defaultInstance];
}
- (Statistics*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (Statistics*) buildPartial {
  Statistics* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (Statistics_Builder*) mergeFrom:(Statistics*) other {
  if (other == [Statistics defaultInstance]) {
    return self;
  }
  if (other.hasId) {
    [self setId:other.id];
  }
  if (other.hasName) {
    [self setName:other.name];
  }
  if (other.hasCount) {
    [self setCount:other.count];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (Statistics_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (Statistics_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setId:[input readInt32]];
        break;
      }
      case 18: {
        [self setName:[input readString]];
        break;
      }
      case 24: {
        [self setCount:[input readInt32]];
        break;
      }
    }
  }
}
- (BOOL) hasId {
  return result.hasId;
}
- (int32_t) id {
  return result.id;
}
- (Statistics_Builder*) setId:(int32_t) value {
  result.hasId = YES;
  result.id = value;
  return self;
}
- (Statistics_Builder*) clearId {
  result.hasId = NO;
  result.id = 0;
  return self;
}
- (BOOL) hasName {
  return result.hasName;
}
- (NSString*) name {
  return result.name;
}
- (Statistics_Builder*) setName:(NSString*) value {
  result.hasName = YES;
  result.name = value;
  return self;
}
- (Statistics_Builder*) clearName {
  result.hasName = NO;
  result.name = @"";
  return self;
}
- (BOOL) hasCount {
  return result.hasCount;
}
- (int32_t) count {
  return result.count;
}
- (Statistics_Builder*) setCount:(int32_t) value {
  result.hasCount = YES;
  result.count = value;
  return self;
}
- (Statistics_Builder*) clearCount {
  result.hasCount = NO;
  result.count = 0;
  return self;
}
@end

@interface PlaceStatistics ()
@property (retain) NSMutableArray* mutableSubCategoryStaticsList;
@property (retain) NSMutableArray* mutableAreaStaticsList;
@property (retain) NSMutableArray* mutableServiceStaticsList;
@end

@implementation PlaceStatistics

@synthesize mutableSubCategoryStaticsList;
@synthesize mutableAreaStaticsList;
@synthesize mutableServiceStaticsList;
- (void) dealloc {
  self.mutableSubCategoryStaticsList = nil;
  self.mutableAreaStaticsList = nil;
  self.mutableServiceStaticsList = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
  }
  return self;
}
static PlaceStatistics* defaultPlaceStatisticsInstance = nil;
+ (void) initialize {
  if (self == [PlaceStatistics class]) {
    defaultPlaceStatisticsInstance = [[PlaceStatistics alloc] init];
  }
}
+ (PlaceStatistics*) defaultInstance {
  return defaultPlaceStatisticsInstance;
}
- (PlaceStatistics*) defaultInstance {
  return defaultPlaceStatisticsInstance;
}
- (NSArray*) subCategoryStaticsList {
  return mutableSubCategoryStaticsList;
}
- (Statistics*) subCategoryStaticsAtIndex:(int32_t) index {
  id value = [mutableSubCategoryStaticsList objectAtIndex:index];
  return value;
}
- (NSArray*) areaStaticsList {
  return mutableAreaStaticsList;
}
- (Statistics*) areaStaticsAtIndex:(int32_t) index {
  id value = [mutableAreaStaticsList objectAtIndex:index];
  return value;
}
- (NSArray*) serviceStaticsList {
  return mutableServiceStaticsList;
}
- (Statistics*) serviceStaticsAtIndex:(int32_t) index {
  id value = [mutableServiceStaticsList objectAtIndex:index];
  return value;
}
- (BOOL) isInitialized {
  for (Statistics* element in self.subCategoryStaticsList) {
    if (!element.isInitialized) {
      return NO;
    }
  }
  for (Statistics* element in self.areaStaticsList) {
    if (!element.isInitialized) {
      return NO;
    }
  }
  for (Statistics* element in self.serviceStaticsList) {
    if (!element.isInitialized) {
      return NO;
    }
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  for (Statistics* element in self.subCategoryStaticsList) {
    [output writeMessage:1 value:element];
  }
  for (Statistics* element in self.areaStaticsList) {
    [output writeMessage:2 value:element];
  }
  for (Statistics* element in self.serviceStaticsList) {
    [output writeMessage:3 value:element];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  for (Statistics* element in self.subCategoryStaticsList) {
    size += computeMessageSize(1, element);
  }
  for (Statistics* element in self.areaStaticsList) {
    size += computeMessageSize(2, element);
  }
  for (Statistics* element in self.serviceStaticsList) {
    size += computeMessageSize(3, element);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (PlaceStatistics*) parseFromData:(NSData*) data {
  return (PlaceStatistics*)[[[PlaceStatistics builder] mergeFromData:data] build];
}
+ (PlaceStatistics*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PlaceStatistics*)[[[PlaceStatistics builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (PlaceStatistics*) parseFromInputStream:(NSInputStream*) input {
  return (PlaceStatistics*)[[[PlaceStatistics builder] mergeFromInputStream:input] build];
}
+ (PlaceStatistics*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PlaceStatistics*)[[[PlaceStatistics builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PlaceStatistics*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (PlaceStatistics*)[[[PlaceStatistics builder] mergeFromCodedInputStream:input] build];
}
+ (PlaceStatistics*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PlaceStatistics*)[[[PlaceStatistics builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PlaceStatistics_Builder*) builder {
  return [[[PlaceStatistics_Builder alloc] init] autorelease];
}
+ (PlaceStatistics_Builder*) builderWithPrototype:(PlaceStatistics*) prototype {
  return [[PlaceStatistics builder] mergeFrom:prototype];
}
- (PlaceStatistics_Builder*) builder {
  return [PlaceStatistics builder];
}
@end

@interface PlaceStatistics_Builder()
@property (retain) PlaceStatistics* result;
@end

@implementation PlaceStatistics_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[PlaceStatistics alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (PlaceStatistics_Builder*) clear {
  self.result = [[[PlaceStatistics alloc] init] autorelease];
  return self;
}
- (PlaceStatistics_Builder*) clone {
  return [PlaceStatistics builderWithPrototype:result];
}
- (PlaceStatistics*) defaultInstance {
  return [PlaceStatistics defaultInstance];
}
- (PlaceStatistics*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (PlaceStatistics*) buildPartial {
  PlaceStatistics* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (PlaceStatistics_Builder*) mergeFrom:(PlaceStatistics*) other {
  if (other == [PlaceStatistics defaultInstance]) {
    return self;
  }
  if (other.mutableSubCategoryStaticsList.count > 0) {
    if (result.mutableSubCategoryStaticsList == nil) {
      result.mutableSubCategoryStaticsList = [NSMutableArray array];
    }
    [result.mutableSubCategoryStaticsList addObjectsFromArray:other.mutableSubCategoryStaticsList];
  }
  if (other.mutableAreaStaticsList.count > 0) {
    if (result.mutableAreaStaticsList == nil) {
      result.mutableAreaStaticsList = [NSMutableArray array];
    }
    [result.mutableAreaStaticsList addObjectsFromArray:other.mutableAreaStaticsList];
  }
  if (other.mutableServiceStaticsList.count > 0) {
    if (result.mutableServiceStaticsList == nil) {
      result.mutableServiceStaticsList = [NSMutableArray array];
    }
    [result.mutableServiceStaticsList addObjectsFromArray:other.mutableServiceStaticsList];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (PlaceStatistics_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (PlaceStatistics_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        Statistics_Builder* subBuilder = [Statistics builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addSubCategoryStatics:[subBuilder buildPartial]];
        break;
      }
      case 18: {
        Statistics_Builder* subBuilder = [Statistics builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addAreaStatics:[subBuilder buildPartial]];
        break;
      }
      case 26: {
        Statistics_Builder* subBuilder = [Statistics builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addServiceStatics:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (NSArray*) subCategoryStaticsList {
  if (result.mutableSubCategoryStaticsList == nil) { return [NSArray array]; }
  return result.mutableSubCategoryStaticsList;
}
- (Statistics*) subCategoryStaticsAtIndex:(int32_t) index {
  return [result subCategoryStaticsAtIndex:index];
}
- (PlaceStatistics_Builder*) replaceSubCategoryStaticsAtIndex:(int32_t) index with:(Statistics*) value {
  [result.mutableSubCategoryStaticsList replaceObjectAtIndex:index withObject:value];
  return self;
}
- (PlaceStatistics_Builder*) addAllSubCategoryStatics:(NSArray*) values {
  if (result.mutableSubCategoryStaticsList == nil) {
    result.mutableSubCategoryStaticsList = [NSMutableArray array];
  }
  [result.mutableSubCategoryStaticsList addObjectsFromArray:values];
  return self;
}
- (PlaceStatistics_Builder*) clearSubCategoryStaticsList {
  result.mutableSubCategoryStaticsList = nil;
  return self;
}
- (PlaceStatistics_Builder*) addSubCategoryStatics:(Statistics*) value {
  if (result.mutableSubCategoryStaticsList == nil) {
    result.mutableSubCategoryStaticsList = [NSMutableArray array];
  }
  [result.mutableSubCategoryStaticsList addObject:value];
  return self;
}
- (NSArray*) areaStaticsList {
  if (result.mutableAreaStaticsList == nil) { return [NSArray array]; }
  return result.mutableAreaStaticsList;
}
- (Statistics*) areaStaticsAtIndex:(int32_t) index {
  return [result areaStaticsAtIndex:index];
}
- (PlaceStatistics_Builder*) replaceAreaStaticsAtIndex:(int32_t) index with:(Statistics*) value {
  [result.mutableAreaStaticsList replaceObjectAtIndex:index withObject:value];
  return self;
}
- (PlaceStatistics_Builder*) addAllAreaStatics:(NSArray*) values {
  if (result.mutableAreaStaticsList == nil) {
    result.mutableAreaStaticsList = [NSMutableArray array];
  }
  [result.mutableAreaStaticsList addObjectsFromArray:values];
  return self;
}
- (PlaceStatistics_Builder*) clearAreaStaticsList {
  result.mutableAreaStaticsList = nil;
  return self;
}
- (PlaceStatistics_Builder*) addAreaStatics:(Statistics*) value {
  if (result.mutableAreaStaticsList == nil) {
    result.mutableAreaStaticsList = [NSMutableArray array];
  }
  [result.mutableAreaStaticsList addObject:value];
  return self;
}
- (NSArray*) serviceStaticsList {
  if (result.mutableServiceStaticsList == nil) { return [NSArray array]; }
  return result.mutableServiceStaticsList;
}
- (Statistics*) serviceStaticsAtIndex:(int32_t) index {
  return [result serviceStaticsAtIndex:index];
}
- (PlaceStatistics_Builder*) replaceServiceStaticsAtIndex:(int32_t) index with:(Statistics*) value {
  [result.mutableServiceStaticsList replaceObjectAtIndex:index withObject:value];
  return self;
}
- (PlaceStatistics_Builder*) addAllServiceStatics:(NSArray*) values {
  if (result.mutableServiceStaticsList == nil) {
    result.mutableServiceStaticsList = [NSMutableArray array];
  }
  [result.mutableServiceStaticsList addObjectsFromArray:values];
  return self;
}
- (PlaceStatistics_Builder*) clearServiceStaticsList {
  result.mutableServiceStaticsList = nil;
  return self;
}
- (PlaceStatistics_Builder*) addServiceStatics:(Statistics*) value {
  if (result.mutableServiceStaticsList == nil) {
    result.mutableServiceStaticsList = [NSMutableArray array];
  }
  [result.mutableServiceStaticsList addObject:value];
  return self;
}
@end

