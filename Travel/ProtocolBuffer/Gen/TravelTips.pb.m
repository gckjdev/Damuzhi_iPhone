// Generated by the protocol buffer compiler.  DO NOT EDIT!

#import "TravelTips.pb.h"

@implementation TravelTipsRoot
static PBExtensionRegistry* extensionRegistry = nil;
+ (PBExtensionRegistry*) extensionRegistry {
  return extensionRegistry;
}

+ (void) initialize {
  if (self == [TravelTipsRoot class]) {
    PBMutableExtensionRegistry* registry = [PBMutableExtensionRegistry registry];
    [self registerAllExtensions:registry];
    extensionRegistry = [registry retain];
  }
}
+ (void) registerAllExtensions:(PBMutableExtensionRegistry*) registry {
}
@end

@interface CommonTravelGuide ()
@property int32_t guideId;
@property int32_t cityId;
@property (retain) NSString* name;
@property (retain) NSString* html;
@end

@implementation CommonTravelGuide

- (BOOL) hasGuideId {
  return !!hasGuideId_;
}
- (void) setHasGuideId:(BOOL) value {
  hasGuideId_ = !!value;
}
@synthesize guideId;
- (BOOL) hasCityId {
  return !!hasCityId_;
}
- (void) setHasCityId:(BOOL) value {
  hasCityId_ = !!value;
}
@synthesize cityId;
- (BOOL) hasName {
  return !!hasName_;
}
- (void) setHasName:(BOOL) value {
  hasName_ = !!value;
}
@synthesize name;
- (BOOL) hasHtml {
  return !!hasHtml_;
}
- (void) setHasHtml:(BOOL) value {
  hasHtml_ = !!value;
}
@synthesize html;
- (void) dealloc {
  self.name = nil;
  self.html = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.guideId = 0;
    self.cityId = 0;
    self.name = @"";
    self.html = @"";
  }
  return self;
}
static CommonTravelGuide* defaultCommonTravelGuideInstance = nil;
+ (void) initialize {
  if (self == [CommonTravelGuide class]) {
    defaultCommonTravelGuideInstance = [[CommonTravelGuide alloc] init];
  }
}
+ (CommonTravelGuide*) defaultInstance {
  return defaultCommonTravelGuideInstance;
}
- (CommonTravelGuide*) defaultInstance {
  return defaultCommonTravelGuideInstance;
}
- (BOOL) isInitialized {
  if (!self.hasName) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasGuideId) {
    [output writeInt32:1 value:self.guideId];
  }
  if (self.hasCityId) {
    [output writeInt32:2 value:self.cityId];
  }
  if (self.hasName) {
    [output writeString:3 value:self.name];
  }
  if (self.hasHtml) {
    [output writeString:4 value:self.html];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasGuideId) {
    size += computeInt32Size(1, self.guideId);
  }
  if (self.hasCityId) {
    size += computeInt32Size(2, self.cityId);
  }
  if (self.hasName) {
    size += computeStringSize(3, self.name);
  }
  if (self.hasHtml) {
    size += computeStringSize(4, self.html);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (CommonTravelGuide*) parseFromData:(NSData*) data {
  return (CommonTravelGuide*)[[[CommonTravelGuide builder] mergeFromData:data] build];
}
+ (CommonTravelGuide*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CommonTravelGuide*)[[[CommonTravelGuide builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (CommonTravelGuide*) parseFromInputStream:(NSInputStream*) input {
  return (CommonTravelGuide*)[[[CommonTravelGuide builder] mergeFromInputStream:input] build];
}
+ (CommonTravelGuide*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CommonTravelGuide*)[[[CommonTravelGuide builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CommonTravelGuide*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (CommonTravelGuide*)[[[CommonTravelGuide builder] mergeFromCodedInputStream:input] build];
}
+ (CommonTravelGuide*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CommonTravelGuide*)[[[CommonTravelGuide builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CommonTravelGuide_Builder*) builder {
  return [[[CommonTravelGuide_Builder alloc] init] autorelease];
}
+ (CommonTravelGuide_Builder*) builderWithPrototype:(CommonTravelGuide*) prototype {
  return [[CommonTravelGuide builder] mergeFrom:prototype];
}
- (CommonTravelGuide_Builder*) builder {
  return [CommonTravelGuide builder];
}
@end

@interface CommonTravelGuide_Builder()
@property (retain) CommonTravelGuide* result;
@end

@implementation CommonTravelGuide_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[CommonTravelGuide alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (CommonTravelGuide_Builder*) clear {
  self.result = [[[CommonTravelGuide alloc] init] autorelease];
  return self;
}
- (CommonTravelGuide_Builder*) clone {
  return [CommonTravelGuide builderWithPrototype:result];
}
- (CommonTravelGuide*) defaultInstance {
  return [CommonTravelGuide defaultInstance];
}
- (CommonTravelGuide*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (CommonTravelGuide*) buildPartial {
  CommonTravelGuide* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (CommonTravelGuide_Builder*) mergeFrom:(CommonTravelGuide*) other {
  if (other == [CommonTravelGuide defaultInstance]) {
    return self;
  }
  if (other.hasGuideId) {
    [self setGuideId:other.guideId];
  }
  if (other.hasCityId) {
    [self setCityId:other.cityId];
  }
  if (other.hasName) {
    [self setName:other.name];
  }
  if (other.hasHtml) {
    [self setHtml:other.html];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (CommonTravelGuide_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (CommonTravelGuide_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setGuideId:[input readInt32]];
        break;
      }
      case 16: {
        [self setCityId:[input readInt32]];
        break;
      }
      case 26: {
        [self setName:[input readString]];
        break;
      }
      case 34: {
        [self setHtml:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasGuideId {
  return result.hasGuideId;
}
- (int32_t) guideId {
  return result.guideId;
}
- (CommonTravelGuide_Builder*) setGuideId:(int32_t) value {
  result.hasGuideId = YES;
  result.guideId = value;
  return self;
}
- (CommonTravelGuide_Builder*) clearGuideId {
  result.hasGuideId = NO;
  result.guideId = 0;
  return self;
}
- (BOOL) hasCityId {
  return result.hasCityId;
}
- (int32_t) cityId {
  return result.cityId;
}
- (CommonTravelGuide_Builder*) setCityId:(int32_t) value {
  result.hasCityId = YES;
  result.cityId = value;
  return self;
}
- (CommonTravelGuide_Builder*) clearCityId {
  result.hasCityId = NO;
  result.cityId = 0;
  return self;
}
- (BOOL) hasName {
  return result.hasName;
}
- (NSString*) name {
  return result.name;
}
- (CommonTravelGuide_Builder*) setName:(NSString*) value {
  result.hasName = YES;
  result.name = value;
  return self;
}
- (CommonTravelGuide_Builder*) clearName {
  result.hasName = NO;
  result.name = @"";
  return self;
}
- (BOOL) hasHtml {
  return result.hasHtml;
}
- (NSString*) html {
  return result.html;
}
- (CommonTravelGuide_Builder*) setHtml:(NSString*) value {
  result.hasHtml = YES;
  result.html = value;
  return self;
}
- (CommonTravelGuide_Builder*) clearHtml {
  result.hasHtml = NO;
  result.html = @"";
  return self;
}
@end

@interface CommonTravelGuideList ()
@property (retain) NSMutableArray* mutableGuideListList;
@end

@implementation CommonTravelGuideList

@synthesize mutableGuideListList;
- (void) dealloc {
  self.mutableGuideListList = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
  }
  return self;
}
static CommonTravelGuideList* defaultCommonTravelGuideListInstance = nil;
+ (void) initialize {
  if (self == [CommonTravelGuideList class]) {
    defaultCommonTravelGuideListInstance = [[CommonTravelGuideList alloc] init];
  }
}
+ (CommonTravelGuideList*) defaultInstance {
  return defaultCommonTravelGuideListInstance;
}
- (CommonTravelGuideList*) defaultInstance {
  return defaultCommonTravelGuideListInstance;
}
- (NSArray*) guideListList {
  return mutableGuideListList;
}
- (CommonTravelGuide*) guideListAtIndex:(int32_t) index {
  id value = [mutableGuideListList objectAtIndex:index];
  return value;
}
- (BOOL) isInitialized {
  for (CommonTravelGuide* element in self.guideListList) {
    if (!element.isInitialized) {
      return NO;
    }
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  for (CommonTravelGuide* element in self.guideListList) {
    [output writeMessage:1 value:element];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  for (CommonTravelGuide* element in self.guideListList) {
    size += computeMessageSize(1, element);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (CommonTravelGuideList*) parseFromData:(NSData*) data {
  return (CommonTravelGuideList*)[[[CommonTravelGuideList builder] mergeFromData:data] build];
}
+ (CommonTravelGuideList*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CommonTravelGuideList*)[[[CommonTravelGuideList builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (CommonTravelGuideList*) parseFromInputStream:(NSInputStream*) input {
  return (CommonTravelGuideList*)[[[CommonTravelGuideList builder] mergeFromInputStream:input] build];
}
+ (CommonTravelGuideList*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CommonTravelGuideList*)[[[CommonTravelGuideList builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CommonTravelGuideList*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (CommonTravelGuideList*)[[[CommonTravelGuideList builder] mergeFromCodedInputStream:input] build];
}
+ (CommonTravelGuideList*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CommonTravelGuideList*)[[[CommonTravelGuideList builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CommonTravelGuideList_Builder*) builder {
  return [[[CommonTravelGuideList_Builder alloc] init] autorelease];
}
+ (CommonTravelGuideList_Builder*) builderWithPrototype:(CommonTravelGuideList*) prototype {
  return [[CommonTravelGuideList builder] mergeFrom:prototype];
}
- (CommonTravelGuideList_Builder*) builder {
  return [CommonTravelGuideList builder];
}
@end

@interface CommonTravelGuideList_Builder()
@property (retain) CommonTravelGuideList* result;
@end

@implementation CommonTravelGuideList_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[CommonTravelGuideList alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (CommonTravelGuideList_Builder*) clear {
  self.result = [[[CommonTravelGuideList alloc] init] autorelease];
  return self;
}
- (CommonTravelGuideList_Builder*) clone {
  return [CommonTravelGuideList builderWithPrototype:result];
}
- (CommonTravelGuideList*) defaultInstance {
  return [CommonTravelGuideList defaultInstance];
}
- (CommonTravelGuideList*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (CommonTravelGuideList*) buildPartial {
  CommonTravelGuideList* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (CommonTravelGuideList_Builder*) mergeFrom:(CommonTravelGuideList*) other {
  if (other == [CommonTravelGuideList defaultInstance]) {
    return self;
  }
  if (other.mutableGuideListList.count > 0) {
    if (result.mutableGuideListList == nil) {
      result.mutableGuideListList = [NSMutableArray array];
    }
    [result.mutableGuideListList addObjectsFromArray:other.mutableGuideListList];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (CommonTravelGuideList_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (CommonTravelGuideList_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        CommonTravelGuide_Builder* subBuilder = [CommonTravelGuide builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addGuideList:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (NSArray*) guideListList {
  if (result.mutableGuideListList == nil) { return [NSArray array]; }
  return result.mutableGuideListList;
}
- (CommonTravelGuide*) guideListAtIndex:(int32_t) index {
  return [result guideListAtIndex:index];
}
- (CommonTravelGuideList_Builder*) replaceGuideListAtIndex:(int32_t) index with:(CommonTravelGuide*) value {
  [result.mutableGuideListList replaceObjectAtIndex:index withObject:value];
  return self;
}
- (CommonTravelGuideList_Builder*) addAllGuideList:(NSArray*) values {
  if (result.mutableGuideListList == nil) {
    result.mutableGuideListList = [NSMutableArray array];
  }
  [result.mutableGuideListList addObjectsFromArray:values];
  return self;
}
- (CommonTravelGuideList_Builder*) clearGuideListList {
  result.mutableGuideListList = nil;
  return self;
}
- (CommonTravelGuideList_Builder*) addGuideList:(CommonTravelGuide*) value {
  if (result.mutableGuideListList == nil) {
    result.mutableGuideListList = [NSMutableArray array];
  }
  [result.mutableGuideListList addObject:value];
  return self;
}
@end

@interface TravelTips ()
@property (retain) NSMutableArray* mutableTipsListList;
@property (retain) NSMutableArray* mutableRouteListList;
@property int32_t cityId;
@end

@implementation TravelTips

@synthesize mutableTipsListList;
@synthesize mutableRouteListList;
- (BOOL) hasCityId {
  return !!hasCityId_;
}
- (void) setHasCityId:(BOOL) value {
  hasCityId_ = !!value;
}
@synthesize cityId;
- (void) dealloc {
  self.mutableTipsListList = nil;
  self.mutableRouteListList = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.cityId = 0;
  }
  return self;
}
static TravelTips* defaultTravelTipsInstance = nil;
+ (void) initialize {
  if (self == [TravelTips class]) {
    defaultTravelTipsInstance = [[TravelTips alloc] init];
  }
}
+ (TravelTips*) defaultInstance {
  return defaultTravelTipsInstance;
}
- (TravelTips*) defaultInstance {
  return defaultTravelTipsInstance;
}
- (NSArray*) tipsListList {
  return mutableTipsListList;
}
- (CommonTravelGuide*) tipsListAtIndex:(int32_t) index {
  id value = [mutableTipsListList objectAtIndex:index];
  return value;
}
- (NSArray*) routeListList {
  return mutableRouteListList;
}
- (CommonTravelGuide*) routeListAtIndex:(int32_t) index {
  id value = [mutableRouteListList objectAtIndex:index];
  return value;
}
- (BOOL) isInitialized {
  for (CommonTravelGuide* element in self.tipsListList) {
    if (!element.isInitialized) {
      return NO;
    }
  }
  for (CommonTravelGuide* element in self.routeListList) {
    if (!element.isInitialized) {
      return NO;
    }
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  for (CommonTravelGuide* element in self.tipsListList) {
    [output writeMessage:1 value:element];
  }
  for (CommonTravelGuide* element in self.routeListList) {
    [output writeMessage:2 value:element];
  }
  if (self.hasCityId) {
    [output writeInt32:3 value:self.cityId];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  for (CommonTravelGuide* element in self.tipsListList) {
    size += computeMessageSize(1, element);
  }
  for (CommonTravelGuide* element in self.routeListList) {
    size += computeMessageSize(2, element);
  }
  if (self.hasCityId) {
    size += computeInt32Size(3, self.cityId);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (TravelTips*) parseFromData:(NSData*) data {
  return (TravelTips*)[[[TravelTips builder] mergeFromData:data] build];
}
+ (TravelTips*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TravelTips*)[[[TravelTips builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (TravelTips*) parseFromInputStream:(NSInputStream*) input {
  return (TravelTips*)[[[TravelTips builder] mergeFromInputStream:input] build];
}
+ (TravelTips*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TravelTips*)[[[TravelTips builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TravelTips*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (TravelTips*)[[[TravelTips builder] mergeFromCodedInputStream:input] build];
}
+ (TravelTips*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TravelTips*)[[[TravelTips builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TravelTips_Builder*) builder {
  return [[[TravelTips_Builder alloc] init] autorelease];
}
+ (TravelTips_Builder*) builderWithPrototype:(TravelTips*) prototype {
  return [[TravelTips builder] mergeFrom:prototype];
}
- (TravelTips_Builder*) builder {
  return [TravelTips builder];
}
@end

@interface TravelTips_Builder()
@property (retain) TravelTips* result;
@end

@implementation TravelTips_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[TravelTips alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (TravelTips_Builder*) clear {
  self.result = [[[TravelTips alloc] init] autorelease];
  return self;
}
- (TravelTips_Builder*) clone {
  return [TravelTips builderWithPrototype:result];
}
- (TravelTips*) defaultInstance {
  return [TravelTips defaultInstance];
}
- (TravelTips*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (TravelTips*) buildPartial {
  TravelTips* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (TravelTips_Builder*) mergeFrom:(TravelTips*) other {
  if (other == [TravelTips defaultInstance]) {
    return self;
  }
  if (other.mutableTipsListList.count > 0) {
    if (result.mutableTipsListList == nil) {
      result.mutableTipsListList = [NSMutableArray array];
    }
    [result.mutableTipsListList addObjectsFromArray:other.mutableTipsListList];
  }
  if (other.mutableRouteListList.count > 0) {
    if (result.mutableRouteListList == nil) {
      result.mutableRouteListList = [NSMutableArray array];
    }
    [result.mutableRouteListList addObjectsFromArray:other.mutableRouteListList];
  }
  if (other.hasCityId) {
    [self setCityId:other.cityId];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (TravelTips_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (TravelTips_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        CommonTravelGuide_Builder* subBuilder = [CommonTravelGuide builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addTipsList:[subBuilder buildPartial]];
        break;
      }
      case 18: {
        CommonTravelGuide_Builder* subBuilder = [CommonTravelGuide builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addRouteList:[subBuilder buildPartial]];
        break;
      }
      case 24: {
        [self setCityId:[input readInt32]];
        break;
      }
    }
  }
}
- (NSArray*) tipsListList {
  if (result.mutableTipsListList == nil) { return [NSArray array]; }
  return result.mutableTipsListList;
}
- (CommonTravelGuide*) tipsListAtIndex:(int32_t) index {
  return [result tipsListAtIndex:index];
}
- (TravelTips_Builder*) replaceTipsListAtIndex:(int32_t) index with:(CommonTravelGuide*) value {
  [result.mutableTipsListList replaceObjectAtIndex:index withObject:value];
  return self;
}
- (TravelTips_Builder*) addAllTipsList:(NSArray*) values {
  if (result.mutableTipsListList == nil) {
    result.mutableTipsListList = [NSMutableArray array];
  }
  [result.mutableTipsListList addObjectsFromArray:values];
  return self;
}
- (TravelTips_Builder*) clearTipsListList {
  result.mutableTipsListList = nil;
  return self;
}
- (TravelTips_Builder*) addTipsList:(CommonTravelGuide*) value {
  if (result.mutableTipsListList == nil) {
    result.mutableTipsListList = [NSMutableArray array];
  }
  [result.mutableTipsListList addObject:value];
  return self;
}
- (NSArray*) routeListList {
  if (result.mutableRouteListList == nil) { return [NSArray array]; }
  return result.mutableRouteListList;
}
- (CommonTravelGuide*) routeListAtIndex:(int32_t) index {
  return [result routeListAtIndex:index];
}
- (TravelTips_Builder*) replaceRouteListAtIndex:(int32_t) index with:(CommonTravelGuide*) value {
  [result.mutableRouteListList replaceObjectAtIndex:index withObject:value];
  return self;
}
- (TravelTips_Builder*) addAllRouteList:(NSArray*) values {
  if (result.mutableRouteListList == nil) {
    result.mutableRouteListList = [NSMutableArray array];
  }
  [result.mutableRouteListList addObjectsFromArray:values];
  return self;
}
- (TravelTips_Builder*) clearRouteListList {
  result.mutableRouteListList = nil;
  return self;
}
- (TravelTips_Builder*) addRouteList:(CommonTravelGuide*) value {
  if (result.mutableRouteListList == nil) {
    result.mutableRouteListList = [NSMutableArray array];
  }
  [result.mutableRouteListList addObject:value];
  return self;
}
- (BOOL) hasCityId {
  return result.hasCityId;
}
- (int32_t) cityId {
  return result.cityId;
}
- (TravelTips_Builder*) setCityId:(int32_t) value {
  result.hasCityId = YES;
  result.cityId = value;
  return self;
}
- (TravelTips_Builder*) clearCityId {
  result.hasCityId = NO;
  result.cityId = 0;
  return self;
}
@end

